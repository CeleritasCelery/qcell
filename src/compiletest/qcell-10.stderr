error[E0277]: `std::cell::Cell<i32>` cannot be shared between threads safely
   --> $DIR/qcell-10.rs:11:5
    |
11  |     std::thread::spawn(|| owner.ro(&cell).set(200));  // Compile fail
    |     ^^^^^^^^^^^^^^^^^^ `std::cell::Cell<i32>` cannot be shared between threads safely
    |
   ::: $RUST/src/libstd/thread/mod.rs:616:8
    |
616 |     F: Send + 'static,
    |        ---- required by this bound in `std::thread::spawn`
    |
    = help: the trait `std::marker::Sync` is not implemented for `std::cell::Cell<i32>`
    = note: required because of the requirements on the impl of `std::marker::Sync` for `qcell::QCell<std::cell::Cell<i32>>`
    = note: required because of the requirements on the impl of `std::marker::Send` for `&qcell::QCell<std::cell::Cell<i32>>`
    = note: required because it appears within the type `[closure@$DIR/src/compiletest/qcell-10.rs:11:24: 11:51 owner:&qcell::QCellOwner, cell:&qcell::QCell<std::cell::Cell<i32>>]`
